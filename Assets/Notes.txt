1- Var, Object ve Dynamic: her türlü değişken türünü tutmanı sağlar
var = hangi değişkeni atarsak o değişkeni alır
object = var gibi istediğin değişkeni tutabilirsin fakat farklı bir değişkene eşitleyince dönüştürme yapman gerekir intNumber.ToString(); gibi
dynamic
*NOT:* dynamic runtime içinde hata verir ama object direkt solution'da hata verir. mesela dönüştürme yapmadan dynamic kullanılabilir ama object kullanılamaz. 

2- CODE

3- Lists:
listName.Remove(8) = listedeki 8 sayısını direkt siler fakat RemoveAt kullanırsan indekstekini siler
BinarySearch() = yazdığın değişkenin indexi kaçsa sana onu verir

4- Params:
parametrede verilecek değerin ne kadar fazla olduğunu bilmiyorsan bu kullanılır.
çok boyutlu diziler kullanılamaz
eğer paramdan farklı yine paramter ekleyeceksen ilk o gelir params en sona eklenir çünkü paramın nerede biteceği belli değildir sonu yok.

5- Const: sabit değer demektir.
const float = 3.14f; gibi kullanılır. Bir defa set edildiği için daha değiştirilemez.

6- Class: Aynı kod bütünlüğünün yazıldığı alandır

7- Access Modifiers (erişim belirleyiciler):
public: her classtan ulaşılabilir
private: sadece o classtan erişilebilir
internal: aynı assembly yani projedeki her yerden ulaşılabilir. Başka assembly'lerden erişilemez.

8- Constructor (Kurucu): Class'lar ile kullanılır
İçinde oluşturulduğu anda ilk çalışan metoddur.

9- Overload: aşırı yükleme yani farklı parametre şekilleriyle kullanılabilir.
aynı şekilde sınıfları constructorlar ile overload işlemi yapabilirsin.

10- Enum: 
bunların eşitliğini kontrol ederken Equals kullanmak daha iyi == yerine.
sen atama yapmasan bile listelerdeki gibi hepsinin index değeri vardır.
Enum. diyerek çeşitli işlemler yaptırabilirsin.













































































